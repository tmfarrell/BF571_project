source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
Ecdf()
library(Hmisc)
install.packages(Hmisc)
install.packages("Hmisc")
library(Hmisc)
Ecdf
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
library(graphics)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
View(diff_gene_expr)
library(lumi)
data()
data(example.lumi)
example.lumi
View(example.lumi)
back_corr = lummiB(example.lumi)
back_corr = lumiB(example.lumi)
View(back_corr)
back_corr_ge = lumiB(gene_expr)
back_corr_ge = lumiB(as.matrix(gene_expr))
as.matrix(gene_expr)
library(convert)
install.packages("convert")
as(gene_expr, "ExpressionSet")
as(as.matrix(gene_expr), "ExpressionSet")
data.frame(gene_expr)
gene_expr_mat = data.frame(gene_expr)
lumiB(gene_expr_mat)
type(gene_expr_mat)
clas(gene_expr_mat)
class(gene_expr_mat)
mat = matrix()
class(mat)
gene_expr_mat = data.matrix(gene_expr)
View(gene_expr_mat)
class(gene_expr_mat)
lumiB(gene_expr_mat)
lumiT(lumiB(gene_expr_mat))
lumiR.batch()
gsm_list = GSMList(getGEO('GSE49577', GSEMatrix=TRUE))
geo = getGEO('GSE49577', GSEMatrix=FALSE)
new("ExpressionSet", exprs=gene_expr_mat)
gene_expr_mat = new("ExpressionSet", exprs=gene_expr_mat)
lumiT(lumiB(gene_expr_mat))
lumiN(lumiB(gene_expr_mat), method="rsn")
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
ge  = get_gene_exprs()
ge
View(ge)
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
gene_expr = get_gene_exprs()
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
gene_expr = get_gene_exprs()
source('/Volumes/Data/work/courses/bf571/project/code/plot_all.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
gene_prot_dict
genes
for (g in genes) print(g)
prot[,"Molecule"] == gene_prot_dict[[genes[[i]]]]
gene_prot_dict[[genes[[1]]]]
gene_prot_dict[[genes[1]]]
gene_prot_dict[genes[1]]
gene_prot_dict[[genes[2]]]
gene_prot_dict[[as.character(genes[2])]]
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
lumiExpresso(gene_expr_mat)
l = lumiExpresso(gene_expr_mat)
View(l)
gene_expr_mat = data.matrix(gene_expr)
l = lumiExpresso(gene_expr_mat)
gene_expr_mat = new("ExpressionSet", exprs=data.matrix(gene_expr))
l = lumiExpresso(gene_expr_mat)
View(l)
mols = as.character(row.names(l))
conditions = as.character(row.names(l))
mols = gene_expr[,"Molecules"]
mols = gene_expr[,"Molecule"]
ge = t(l)
ge = as.data.frame(t(as.matrix(l)))
colnames(ge) = conditions
ge[,"Molecule"] = mols
View(ge)
View(l)
View(t(l))
View(t(as.matrix(l)))
View(t(data.matrix(l)))
class(l)
as.matrix(l)
class(as.matrix(l))
as.data.frame(as.matrix(l))
ge = as.data.frame(as.matrix(l))
ge[,"Molecule"] = mols
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
gene_expr = get_gene_exprs()
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
gene_expr = get_gene_exprs()
View(gene_expr)
gene_expr[,"Molecule"]
source('/Volumes/Data/work/courses/bf571/project/code/plot_all.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
View(corr_df)
View(sig)
View(nonsig)
sig = diff_expr[which(!is.na(diff_expr[,"sig_corr"]) & !diff_expr["gene_diff_expr_sig"] == TRUE), "sig_corr"]
View(sig)
View(diff_expr)
sig = diff_expr[which(!is.na(diff_expr[,"sig_corr"]) & diff_expr["gene_diff_expr_sig"] == TRUE), "sig_corr"]
View(sig)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
View(diff_expr)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
View(diff_expr)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
View(diff_expr)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
length(sig)
length(nonsig)
genes
source('~/.active-rstudio-document')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
pe
ge
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
pe
ge
length(ge)
length(pe)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
c
remove_set(c(c)
)
remove_set(c)
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
remove_set(c)
remove_set(c(c))
strsplit(c, " ")
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
remove_set_single(c)
strsplit(c, " ")
strsplit(c, " ")[[1]]
strsplit(c, " ")[[1]][1]
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
remove_set_single(c)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
length(ge)
length(pe)
length(ge) / length(pe)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
length(ge)
length(pe)
plot(ge, pe)
dev.off()
plot(ge, pe)
View(prot_expr)
View(pe)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
prot_expr[which(prot_expr[,"Molecule"] == gene_prot_dict[[genes[[i]]]]), remove_set_single(c)]
p
g
diff_gene_expr[[1]]
diff_gene_expr[[2]]
diff_gene_expr[[3]]
source('/Volumes/Data/work/courses/bf571/project/code/plot_all.R')
View(diff_gene_expr)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
pe
length(pe)
length(ge)
plot(ge, pe)
lm(ge, pe)
lm(pe ~ ge)
model = lm(pe ~ ge)
model$terms
model$coefficients
normalize_df(diff_gene_expr[,colnames(diff_gene_expr)[!grepl("p.val", colnames(diff_gene_expr)) &
!grepl("Molecule", colnames(diff_gene_expr))])])
diff_gene_expr_norm = normalize_df(diff_gene_expr[,colnames(diff_gene_expr)[!grepl("p.val", colnames(diff_gene_expr)) & !grepl("Molecule", colnames(diff_gene_expr))]])
colnames(diff_gene_expr)[!grepl("p.val", colnames(diff_gene_expr)) & !grepl("Molecule", colnames(diff_gene_expr))
)
colnames(diff_gene_expr)[!grepl("p.val", colnames(diff_gene_expr)) & !grepl("Molecule", colnames(diff_gene_expr))]
diff_gene_expr_norm = normalize_df(diff_gene_expr[,colnames(diff_gene_expr)[!grepl("p.val", colnames(diff_gene_expr))]])
diff_gene_expr_norm
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
colnames(diff_gene_expr_norm)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
c
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
ge
pe
plot(ge, pe)
lm(pe ~ ge)
model = lm(pe ~ ge)
summary(model)$adj.r.squared
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/Untitled.R')
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
comment(gene_expr) = "lumi-preprocessed"
comment(gene_expr)
comments(prot_expr)
comment(prot_expr)
logical()
logical("")
if("") print("True")
if(bool(""))
print("True")
t = ""
if (t == "") print("True")
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
source('/Volumes/Data/work/courses/bf571/project/code/plot_all.R')
source('/Volumes/Data/work/courses/bf571/project/code/plot_all.R')
source('~/.active-rstudio-document')
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
as.character(TRUE)
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
lumi
paste0("this", "")
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
library(tseries)
gene
View(diff_gene_expr_norm)
View(diff_prot_expr)
adf.test(as.numeric(diff_gene_expr[1,]), alternative="stationary", k=0)
adf.test(as.numeric(diff_gene_expr[1,grepl("HOX424 CarboTax", colnames(diff_gene_expr))]), alternative="stationary", k=0)
grepl("HOX424 CarboTax", colnames(diff_gene_expr))
grepl("HOX424 CarboTax", colnames(diff_gene_expr_norm))
adf.test(as.numeric(diff_gene_expr[1,grepl("HOX424 CarboTax", colnames(diff_gene_expr_norm))]), alternative="stationary", k=0)
adf.test(as.numeric(diff_gene_expr[1,grepl("OV1002 CarboTax", colnames(diff_gene_expr_norm))]), alternative="stationary", k=0)
adf.test(as.numeric(diff_gene_expr[1,grepl("OV1002 Carbo ", colnames(diff_gene_expr_norm))]), alternative="stationary", k=0)
adf.test(as.numeric(diff_prot_expr[1,grepl("OV1002 Carbo ", colnames(diff_prot_expr))]), alternative="stationary", k=0)
adf.test(as.numeric(diff_prot_expr[1,grepl("OV1002 CarboTax", colnames(diff_prot_expr))]), alternative="stationary", k=0)
adf.test(as.numeric(diff_prot_expr[1,grepl("HOX424 CarboTax", colnames(diff_prot_expr))]), alternative="stationary", k=0)
adf.test(as.numeric(diff_prot_expr[1,grepl("HOX424 Carbo ", colnames(diff_prot_expr))]), alternative="stationary", k=0)
adf.test(as.numeric(diff_gene_expr_norm[1,grepl("HOX424 Carbo ", colnames(diff_gene_expr_norm))]), alternative="stationary", k=0)
adf.test(as.numeric(diff_gene_expr_norm[1,grepl("HOX424 CarboTax", colnames(diff_gene_expr_norm))]), alternative="stationary", k=0)
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('~/.active-rstudio-document')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
as.numeric(e[i, grepl(t, colnames(e))])
e[i, grepl(t, colnames(e)]
e[i, grepl(t, colnames(e))]
colnames(e)
strsplit(colnames(e), "[.]")
remove_set(colnames(e))
remove_set(colnames(e)[-length(colnames(e))]
)
remove_set(colnames(e)[!grepl("Molecule", colnames(e))])
c(remove_set(colnames(e)[!grepl("Molecule", colnames(e))]), "Molecule")
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
adf.test(as.numeric(diff_prot_expr[1,grepl("HOX424 Carbo ", colnames(diff_prot_expr))]), alternative="stationary", k=0)
adf = adf.test(as.numeric(diff_prot_expr[1,grepl("HOX424 Carbo ", colnames(diff_prot_expr))]), alternative="stationary", k=0)
adf$statistic
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
warnings()
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
paste0(c("this", "that", "", ""))
paste0("this", "that", "", "")
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
colnames(e)
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
source('~/.active-rstudio-document')
!grepl("Molecule", colnames(e))
remove_set(colnames(e)[!grepl("Molecule", colnames(e))])
colnames(e)
grepl(t, colnames(e))
as.numeric(e[i, grepl(t, colnames(e))
)
as.numeric(e[i, grepl(t, colnames(e))])
adf.test(as.numeric(e[i, grepl(t, colnames(e))]),
alternative="stationary", k=0)
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
expr
t
s
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
View(ADFs)
differenced = ADFs[grepl("differenced", ADFs[,"expr"]),]
View(differenced)
differenced[which(differenced[,"pval"] <= 0.01),]
sig_pval = ADFs[which(ADFs[,"pval"] <= 0.01),]
nrow(sig_pval)
sum(as.numeric(grepl("protein", sig_pval[,"expr"])))
sum(as.numeric(grepl("gene", sig_pval[,"expr"])))
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
View(ADFs)
sig_pval = ADFs[which(ADFs[,"pval"] <= 0.01),]
View(sig_pval)
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
View(stationary)
rm(differenced)
rm(sig_pval)
source('~/.active-rstudio-document')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
View(stationary)
stationary_gene = stationary[grepl("gene", stationary[,"expr"]),]
stationary_prot = stationary[grepl("prot", stationary[,"expr"]),]
unique(stationary_gene[,"type"])
as.character(unique(stationary_gene[,"type"]))
lumi
granger.test()
grangertest()
library(forecast)
install.packages("forecast")
library(forecast)
i = 1
ts = unique(as.character(stationary_gene[,"type"]))
ts[1]
t = ts[1]
g_idx = which(stationary_gene[,"type"] == t)
i = g_idx[1]
i
set = stationary_gene[i,"set"]
g_expr = stationary_gene[i,"expr"]
gene = stationary_gene[i, "molecule"]
gene_expr = read.csv(paste0(g_expr, '-', t, s, lumi, '.csv'), sep=',')
gene_ts = gene_expr[which(gene_expr[,"Molecule"] == gene),
!grepl("Molecule", colnames(gene_expr))]
set = stationary_gene[i,"set"]
g_expr = stationary_gene[i,"expr"]
gene = as.character(stationary_gene[i, "molecule"])
gene_expr = read.csv(paste0(g_expr, '-', t, s, lumi, '.csv'), sep=',')
gene_ts = gene_expr[which(gene_expr[,"Molecule"] == gene),
!grepl("Molecule", colnames(gene_expr))]
p_idx = which(stationary_prot[,"type"] == t)
j  = p_idx[1]
p_expr = stationary_prot[j, "expr"]
prot = stationary_prot[j, "molecule"]
prot_expr = read.csv(paste0(p_expr, '-', t, lumi, '.csv'), sep=',')
prot_ts = prot_expr[which(prot_expr[,"Molecule"] == prot),
!grepl("Molecule", colnames(prot_expr))]
p_expr = stationary_prot[j, "expr"]
prot = as.character(stationary_prot[j, "molecule"])
prot_expr = read.csv(paste0(p_expr, '-', t, lumi, '.csv'), sep=',')
prot_ts = prot_expr[which(prot_expr[,"Molecule"] == prot),
!grepl("Molecule", colnames(prot_expr))]
grangertest(prot_ts ~ gene_ts)
library(forecast)
grangertest(prot_ts ~ gene_ts)
grangertest(prot_ts ~ gene_ts, order=2)
install.packages(lmtest)
install.packages("lmtest")
grangertest(prot_ts ~ gene_ts, order=2)
library(lmtest)
grangertest(prot_ts ~ gene_ts, order=2)
gene_ts = as.numeric(gene_expr[which(gene_expr[,"Molecule"] == gene),
!grepl("Molecule", colnames(gene_expr))])
gene_ts
gene_ts = as.numeric(gene_expr[i, !grepl("Molecule", colnames(gene_expr))])
prot_ts = as.numeric(prot_expr[j, !grepl("Molecule", colnames(prot_expr))])
grangertest(prot_ts ~ gene_ts, order=2)
grangertest(prot_ts ~ gene_ts)
gt = grangertest(prot_ts ~ gene_ts)
gt$F
gt$Pr(>F)
gt$Pr(>F)
gt$"Pr(>F)"
gt$"Pr(>F)"[2]
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
gene_ts
prot_ts
!grep("p.val", colnames(gene_expr)) &
!grepl("Molecule", colnames(gene_expr))
!grep("Molecule", colnames(gene_expr))
grep("Molecule", colnames(gene_expr))
gene_ts = as.numeric(gene_expr[i, !grepl("p.val", colnames(gene_expr)) &
!grepl("Molecule", colnames(gene_expr))])
gene_ts
i
gene_expr[i,]
View(gene_expr)
1:!
1
1:1
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
g_cause = data.frame(gene_expr=character(), prot_expr=character(), type=character(),
gene=character(), prot=character(), set=character(),
stat=double(), pval=double())
gt = grangertest(prot_ts ~ gene_ts)
g_cause = rbind(g_cause, data.frame(list(gene_expr=g_expr, prot_expr=p_expr,
gene=gene, prot=prot, type=t, set=s,
stat=gt$F, pval=gt$"Pr(>F)")))
g_cause
g_expr
gene
prot
gt = grangertest(prot_ts ~ gene_ts)
g_cause = rbind(g_cause, data.frame(list(gene_expr=g_expr, prot_expr=p_expr,
gene=gene, prot=prot, type=t, set=s,
stat=gt$F[2], pval=gt$"Pr(>F)"[2])))
g_cause
source('/Volumes/Data/work/courses/bf571/project/code/casual_analysis.R')
View(ADFs)
ADFs[,"row.names"] = NULL
View(ADFs)
ADFs["row.names"] = NULL
View(ADFs)
View(g_cause)
sig_gcause = g_cause[which(g_cause[,"pval"] < 0.05)]
sig_gcause = g_cause[which(g_cause[,"pval"] < 0.05),]
View(sig_gcause)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
View(gene_expr)
View(gene_expr[,"Molecule"])
View(corr_df)
g
ge
View(diff_gene_expr_norm)
gene
genes
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
ge
pe
View(diff_gene_expr_norm)
View(diff_gene_expr_norm)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
gexp = mean(as.numeric(diff_gene_expr_norm[i, c]))
pexp = as.numeric(prot_expr[which(prot_expr[,"Molecule"] == gene_prot_dict[[g]]), c])
if (!is.na(gexp) && !is.na(pexp)) {
ge = c(ge, gexp)
pe = c(pe, pexp)
}
gexp
pexp
is.na(pexp)
g
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
gexp
pexp
i
c
prot_expr[which(prot_expr[,"Molecule"] == gene_prot_dict[[genes[[i]]]]), c]
expr
pro_expr
View(prot_expr)
source('/Volumes/Data/work/courses/bf571/project/code/correlation_analysis.R')
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
gene_expr = get_gene_exprs(normalize=normalize, lumi=lumi_preprocess)
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
gene_expr = get_gene_exprs(normalize=normalize, lumi=lumi_preprocess)
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
normalize_preprocess = TRUE
gene_expr = get_gene_exprs(normalize_preprocess=normalize_preprocess, lumi=lumi_preprocess)
source('/Volumes/Data/work/courses/bf571/project/code/utils.R')
View(gene_expr)
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
View(corr_df)
View(corr_df)
View(corr_df)
View(sig)
View(nonsig)
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
source('/Volumes/Data/work/courses/bf571/project/code/run_pipeline.R')
source('/Volumes/Data/work/courses/bf571/BF571_project/code/run_pipeline.R')
